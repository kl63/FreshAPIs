version: '3.8'

services:
  api:
    build: .
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/freshly_supermarket
      - SECRET_KEY=your-secret-key-change-in-production
      - ENVIRONMENT=development
    restart: always
    labels:
      - traefik.enable=true
      - traefik.http.routers.freshly-api-http.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.freshly-api-http.entrypoints=http
      - traefik.http.routers.freshly-api-http.middlewares=https-redirect
      - traefik.http.routers.freshly-api-https.rule=Host(`${DOMAIN}`)
      - traefik.http.routers.freshly-api-https.entrypoints=https
      - traefik.http.routers.freshly-api-https.tls=true
      - traefik.http.routers.freshly-api-https.tls.certresolver=le
      - traefik.http.routers.freshly-api-https.service=freshly-api-service
      - traefik.http.services.freshly-api-service.loadbalancer.server.port=8000
    networks:
      - traefik-public
      - default

  db:
    image: postgres:14
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=freshly_supermarket
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "5050:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@freshly.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    depends_on:
      - db
    volumes:
      - pgadmin_data:/var/lib/pgadmin

volumes:
  postgres_data:
  pgadmin_data:

networks:
  traefik-public:
    external: true
  default:
